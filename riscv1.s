.text #секция кода #т.к. в словах 32 бита, последовательность выводится корректно до 46 номера (включительно)
__start:
.globl __start
    lw a2, number   #храним искомый номер по адресу number, в a2 записываем оттуда значение
    li t0, 1        #x, текущий член последовательности
    li t1, 1        #y, следующий член последовательности
    li t2, 0        #с, вспомогательная переменная
    li a3, 1        #const 1
    li a4, 2        #const 2
    beq a2, a3, finish #если искомый номер 1, заканчиваем работу, выводим y
    beq a2, a4, finish #если искомый номер 2, заканчиваем работу, выводим y
loop:
    addi t2, t1, 0    #t2 = t1 (c = x)
    add t1, t1, t0    #t1 += t0 (y += x)
    addi t0, t2, 0    #t0 = t2 (x = c)
    sub a2, a2, a3    #a2--
    bne a2, a4, loop  #if(number!=2) выполнить еще одну итерацию
loop_exit:
finish:
    addi a1, t1, 0    #записываем ответ в a1
    li a0, 1          #готовим ecall для вывода a1 в консоль
    ecall
    li a0, 10         #x10 = 10 
    ecall             #ecall при значении x10 = 10 => останов симулятора
.rodata
number:
    .word 20